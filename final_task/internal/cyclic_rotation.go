// Задача Циклическая ротация
// Копия для использования в финальной задаче
package internal

//O(n) по времени и O(n) по памяти получается
func CyclicRotationSolve(A []int, K int) []int {
	//инициализируем слайс нулевыми значениями той же длины и емкости, что и входной массив
	var new_arr = make([]int, len(A), len(A))

	for i := 0; i < len(A); i++ {
		//вычисляем позицию помещаемого элемента, как остаток от деления на длину массива
		pos := (i + K) % len(A)
		new_arr[pos] = A[i]
	}
	return new_arr
}

//по идее можно не создавать новый массив, а смещать начало в оригинальном массиве
//по идее делается это через указатели
//но за небольшое время не смог разобраться с синтаксисом и отступил
//если добить, то было бы решение за O(1) по времени
